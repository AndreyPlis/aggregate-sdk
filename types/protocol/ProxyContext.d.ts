import Context from '../context/Context';
import ContextManager from '../context/ContextManager';
import AbstractContext from '../context/AbstractContext';
import DefaultContextEventListener from '../context/DefaultContextEventListener';
import Runnable from '../util/java/Runnable';
import AbstractAggreGateDeviceController from './AbstractAggreGateDeviceController';
import Event from '../data/Event';
import FunctionDefinition from '../context/FunctionDefinition';
import TableFormat from '../datatable/TableFormat';
import CallerController from '../context/CallerController';
import DataTable from '../datatable/DataTable';
import VariableDefinition from '../context/VariableDefinition';
import EventData from '../context/EventData';
import ActionDefinition from '../action/ActionDefinition';
import EventDefinition from '../context/EventDefinition';
import ContextStatus from '../context/ContextStatus';
import RequestController from '../context/RequestController';
import FireEventRequestController from '../event/FireEventRequestController';
import Permissions from '../security/Permissions';
import AggreGateDevice from './AggreGateDevice';
export default class ProxyContext<C extends Context<C, M>, M extends ContextManager<any>> extends AbstractContext<C, M> {
    private static readonly DEFERRED_TASKS;
    private static readonly METADATA_READ_TIMEOUT;
    private static readonly LISTENER_OPERATIONS_TIMEOUT;
    static readonly DURABLE_OPERATIONS_TIMEOUT = 600000;
    static readonly F_LOCAL_REINITIALIZE = "localReinitialize";
    private readonly controller;
    private notManageRemoteListeners;
    private localInitComplete;
    private initializingInfo;
    private initializedInfo;
    private initializingChildren;
    private initializedChildren;
    private initializingVariables;
    private initializedVariables;
    private initializingFunctions;
    private initializedFunctions;
    private initializingEvents;
    private initializedEvents;
    private initializingActions;
    private initializedActions;
    private initializingStatus;
    private initializedStatus;
    private initializingVisibleChildren;
    private visibleChildren;
    private localRoot;
    private peerRoot;
    private peerPrimaryRoot;
    private remoteRoot;
    private remotePath;
    private mapped;
    private variableCache;
    private static initProxyContext;
    private static AUTO_LISTENED_EVENTS;
    static staticInitializerProxyContext(): void;
    constructor(name: string, controller: AbstractAggreGateDeviceController<AggreGateDevice, M>);
    loadContext(): Promise<Context<any, any>>;
    setupMyself(): void;
    protected addLocalFunctionDefinitions(): void;
    protected decodeFormat(source: string, caller: CallerController | null): TableFormat | null;
    protected clear(): void;
    private initInfo;
    private initChildren;
    private initVariables;
    private initFunctions;
    private initEvents;
    private initActions;
    private initVisibleChildren;
    private initStatus;
    private initInfoImpl;
    protected convertRemoteDescription(remoteDescription: string): string;
    private initChildrenImpl;
    private initVisibleChildrenImpl;
    protected createChildContextProxy(name: string): ProxyContext<C, M>;
    private initVariablesImpl;
    private initFunctionsImpl;
    private initEventsImpl;
    private initActionsImpl;
    private initStatusImpl;
    private checkInfo;
    getDescription(): string | null;
    getType(): string | null;
    getLocalRoot(withParent: boolean): string | null;
    getRemoteRoot(): string | null;
    getPeerRoot(): string | null;
    isMapped(): boolean;
    get(contextPath: string, caller?: CallerController | null): Context<C, M> | null;
    getIconId(): string | null;
    getChild(name: string, caller?: CallerController | null): C | null;
    getVariableDefinition(name: string, caller?: CallerController | null): VariableDefinition | null;
    getFunctionDefinition(name: string, caller?: CallerController | null): FunctionDefinition | null;
    getEventData(name: string): EventData;
    getActionDefinition(name: string, caller?: CallerController): ActionDefinition | null;
    getVariableDefinitions(caller?: CallerController | null, includeHidden?: boolean): Array<VariableDefinition>;
    getFunctionDefinitions(caller?: CallerController | null, includeHidden?: boolean): Array<FunctionDefinition>;
    getEventDefinitions(caller?: CallerController | null, includeHidden?: boolean): Array<EventDefinition>;
    getActionDefinitions(caller?: CallerController | null, includeHidden?: boolean): Array<ActionDefinition>;
    getStatus(): ContextStatus | null;
    private initVariablesLoggingErrors;
    private initFunctionsLoggingErrors;
    private initEventsLoggingErrors;
    private initActionsLoggingErrors;
    private initStatusLoggingErrors;
    private sendGetVariable;
    getRemoteVariable(format: TableFormat, name: string, timeout: number): Promise<DataTable>;
    getController(): AbstractAggreGateDeviceController<AggreGateDevice, M>;
    protected setupVariables(): void;
    protected getVariableImpl(def: VariableDefinition, caller: CallerController | null, request: RequestController | null): Promise<DataTable | null>;
    private getRemoteVariableByDef;
    protected setVariableImpl(def: VariableDefinition, caller: CallerController | null, request: RequestController | null, value: DataTable): boolean;
    protected setupFunctions(): void;
    protected callFunctionImpl(def: FunctionDefinition, caller: CallerController | null, request: RequestController | null, parameters: DataTable): Promise<DataTable | null>;
    protected callRemoteFunction(name: string, outputFormat: TableFormat | null, parameters: DataTable, queueName: string | null, isReplyRequired: boolean): Promise<DataTable>;
    addEventListener(name: string, listener: DefaultContextEventListener, weak?: boolean): boolean;
    addEventListenerToProxy(name: string, contextEventListener: DefaultContextEventListener, weak: boolean, sendRemoteCommand: boolean): boolean;
    removeEventListener(name: string, listener: DefaultContextEventListener): boolean;
    removeEventListenerToProxy(name: string, listener: DefaultContextEventListener, sendRemoteCommand: boolean): boolean;
    private addRemoteListener;
    getChildren(caller?: CallerController | null): Array<Context<C, M>>;
    getVisibleChildren(caller?: CallerController | null): Array<Context<C, M>>;
    addVisibleChild(localVisiblePath: string): void;
    removeVisibleChild(localVisiblePath: string): void;
    hasVisibleChild(path: string): boolean;
    private restoreEventListeners;
    reinitialize(): void;
    protected _fireEvent(ed: EventDefinition, data: DataTable, level: number, id: number | null, creationtime: Date | null, listener: number | null, caller: CallerController | null, request: FireEventRequestController | null, permissions: Permissions | null): Event | null;
    private cacheVariableValue;
    protected getPathDescription(): string;
    isProxy(): boolean;
    isDistributed(): boolean;
    getRemotePath(): string | null;
    getLocalPrimaryRoot(): string | null;
    getPeerPath(): string;
    getLocalPath(remoteFullPath: string, visible: boolean): string | null;
    private getLocalPrimaryPath;
    static addDeferredTask(path: string, task: Runnable): void;
    private executeDeferredTasks;
    protected getLocalVisiblePath(peerVisiblePath: string): string;
    isInitializedStatus(): boolean;
    isInitializedInfo(): boolean;
    isInitializedChildren(): boolean;
    isInitializedVariables(): boolean;
    isInitializedFunctions(): boolean;
    isInitializedEvents(): boolean;
    isNotManageRemoteListeners(): boolean;
    setNotManageRemoteListeners(notManageRemoteListeners: boolean): void;
}
