import AggreGateBean from '../datatable/AggreGateBean';
import TableFormat from '../datatable/TableFormat';
import DataRecord from '../datatable/DataRecord';
export default class ViewFilterElement extends AggreGateBean {
    static readonly LOGICAL_OPERATION_NONE: number;
    static readonly LOGICAL_OPERATION_AND: number;
    static readonly LOGICAL_OPERATION_OR: number;
    static readonly TYPE_CONDITION: number;
    static readonly TYPE_NESTED_CONDITIONS: number;
    static readonly OPERATION_EQUALS: string;
    static readonly OPERATION_DOES_NOT_EQUAL: string;
    static readonly OPERATION_IS_NULL: string;
    static readonly OPERATION_IS_NOT_NULL: string;
    static readonly OPERATION_CONTAINS: string;
    static readonly OPERATION_DOES_NOT_CONTAIN: string;
    static readonly OPERATION_BEGINS_WITH: string;
    static readonly OPERATION_DOES_NOT_BEGIN_WITH: string;
    static readonly OPERATION_ENDS_WITH: string;
    static readonly OPERATION_DOES_NOT_END_WITH: string;
    static readonly OPERATION_IS_GREATER_THAN: string;
    static readonly OPERATION_IS_GREATER_OR_EQUAL_THAN: string;
    static readonly OPERATION_IS_LESS_THAN: string;
    static readonly OPERATION_IS_LESS_OR_EQUAL_THAN: string;
    static readonly OPERATION_ON: string;
    static readonly OPERATION_ON_OR_AFTER: string;
    static readonly OPERATION_ON_OR_BEFORE: string;
    static readonly OPERATION_LAST_HOUR: string;
    static readonly OPERATION_THIS_HOUR: string;
    static readonly OPERATION_NEXT_HOUR: string;
    static readonly OPERATION_YESTERDAY: string;
    static readonly OPERATION_TODAY: string;
    static readonly OPERATION_TOMORROW: string;
    static readonly OPERATION_LAST_WEEK: string;
    static readonly OPERATION_THIS_WEEK: string;
    static readonly OPERATION_NEXT_WEEK: string;
    static readonly OPERATION_LAST_MONTH: string;
    static readonly OPERATION_THIS_MONTH: string;
    static readonly OPERATION_NEXT_MONTH: string;
    static readonly OPERATION_LAST_YEAR: string;
    static readonly OPERATION_THIS_YEAR: string;
    static readonly OPERATION_NEXT_YEAR: string;
    static readonly OPERATION_LAST_X_HOURS: string;
    static readonly OPERATION_NEXT_X_HOURS: string;
    static readonly OPERATION_LAST_X_DAYS: string;
    static readonly OPERATION_NEXT_X_DAYS: string;
    static readonly OPERATION_LAST_X_WEEKS: string;
    static readonly OPERATION_NEXT_X_WEEKS: string;
    static readonly OPERATION_LAST_X_MONTHS: string;
    static readonly OPERATION_NEXT_X_MONTHS: string;
    static readonly OPERATION_LAST_X_YEARS: string;
    static readonly OPERATION_NEXT_X_YEARS: string;
    static readonly F_STORAGE_OPERATIONS: string;
    static readonly FORMAT: TableFormat;
    static readonly FIELD_LOGICAL: string;
    static readonly FIELD_TYPE: string;
    static readonly FIELD_STORAGE: string;
    static readonly FIELD_TABLE: string;
    static readonly FIELD_COLUMN: string;
    static readonly FIELD_OPERATION: string;
    static readonly FIELD_VALUE: string;
    static readonly FIELD_NESTED: string;
    static readonly OPERATIONS: Map<string, string>;
    static __static_initializer_0(): void;
    static __static_initializer_1(): void;
    private logical;
    private type;
    private storage;
    private table;
    private column;
    private operation;
    private value;
    private nested;
    private local;
    constructor(data?: DataRecord);
    getLogical(): number | null;
    setLogical(logical: number): void;
    getType(): number | null;
    setType(type: number): void;
    getStorage(): string | null;
    setStorage(storage: string): void;
    getTable(): string | null;
    setTable(table: string): void;
    getColumn(): string | null;
    setColumn(column: string): void;
    getOperation(): string | null;
    setOperation(operation: string): void;
    getValue(): string | null;
    setValue(value: string): void;
    getNested(): Array<ViewFilterElement> | null;
    setNested(nested: Array<ViewFilterElement>): void;
    addNested(nestedElement: ViewFilterElement): void;
    isLocal(): boolean;
    setLocal(local: boolean): void;
    private static _init;
    static initialize(): void;
}
