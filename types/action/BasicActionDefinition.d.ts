import AbstractEntityDefinition from '../context/AbstractEntityDefinition';
import ActionDefinition from './ActionDefinition';
import ActionCommandList from './ActionCommandList';
import TreeMask from './TreeMask';
import GroupIdentifier from './GroupIdentifier';
import Permissions from '../security/Permissions';
import ActionCommand from './ActionCommand';
import StringIdentifier from './StringIdentifier';
export default class BasicActionDefinition extends AbstractEntityDefinition implements ActionDefinition, ActionCommandList {
    protected static readonly GROUP_ID_SEPARATOR = "/";
    protected static readonly PROPERTY_NAME = "name";
    protected static readonly PROPERTY_DESCRIPTION = "description";
    protected static readonly PROPERTY_DROP_SOURCES = "dropSources";
    protected static readonly PROPERTY_HELP = "help";
    protected static readonly PROPERTY_ACCELERATOR = "accelerator";
    protected static readonly PROPERTY_HIDDEN = "hidden";
    protected static readonly PROPERTY_ENABLED = "enabled";
    protected static readonly PROPERTY_GROUP_ID = "groupId";
    protected static readonly PROPERTY_ICON_ID = "iconId";
    protected static readonly PROPERTY_DEFAULT = "default";
    private enabled;
    private default;
    private hidden;
    private actionClass;
    private executionGroup;
    private dropSources;
    private commandList;
    private concurrent;
    private accelerator;
    constructor(name: string);
    compareTo(o: any): number;
    getCommands(): Array<ActionCommand> | null;
    getDropSources(): Array<TreeMask> | null;
    getPermissions(): Permissions | null;
    isConcurrent(): boolean;
    isDefault(): boolean;
    isEnabled(): boolean;
    isHeadless(): boolean;
    isHidden(): boolean;
    getExecutionGroup(): StringIdentifier | null;
    setDefault(isDefault: boolean): void;
    setEnabled(enabled: boolean): void;
    setDropSources(dropSources: Array<TreeMask>): void;
    setHidden(hidden: boolean): void;
    setExecutionGroup(groupIdentifier: GroupIdentifier): void;
    getAccelerator(): string | null;
    setAccelerator(accelerator: string): void;
    setActionClass(actionClass: any | null): void;
    instantiate(): any;
    getEntityType(): number;
}
