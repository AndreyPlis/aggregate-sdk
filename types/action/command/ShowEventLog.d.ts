import GenericActionCommand from '../GenericActionCommand';
import TableFormat from '../../datatable/TableFormat';
import DataTable from '../../datatable/DataTable';
import DashboardsHierarchyInfo from '../../util/DashboardsHierarchyInfo';
import WindowLocation from '../../util/WindowLocation';
import DashboardProperties from '../../util/DashboardProperties';
import EntityList from '../../context/EntityList';
export default class ShowEventLog extends GenericActionCommand {
    static readonly CF_EVENT_FILTER: string;
    static readonly CF_EVENT_LIST: string;
    static readonly CF_SHOW_REALTIME: string;
    static readonly CF_SHOW_HISTORY: string;
    static readonly CF_PRELOAD_HISTORY: string;
    static readonly CF_SHOW_CONTEXTS: string;
    static readonly CF_SHOW_NAMES: string;
    static readonly CF_SHOW_LEVELS: string;
    static readonly CF_SHOW_DATA: string;
    static readonly CF_SHOW_ACKNOWLEDGEMENTS: string;
    static readonly CF_SHOW_ENRICHMENTS: string;
    static readonly CF_FILTER_PARAMETERS: string;
    static readonly CF_CUSTOM_LISTENER_CODE: string;
    static readonly CF_LOCATION: string;
    static readonly CF_DASHBOARD: string;
    static readonly CF_KEY: string;
    static readonly CF_DEFAULT_CONTEXT: string;
    static readonly CF_CLASS_NAME: string;
    static readonly CF_INSTANCE_ID: string;
    static readonly CF_DEFAULT_EVENT: string;
    static readonly CF_DASHBOARDS_HIERARCHY_INFO: string;
    static readonly RF_LISTENER_CODE: string;
    static readonly CFT_SHOW_EVENT_LOG: TableFormat;
    static __static_initializer_0(): void;
    static readonly RFT_SHOW_EVENT_LOG: TableFormat;
    private eventFilter;
    private events;
    private showRealtime;
    private showHistory;
    private preloadHistory;
    private showContexts;
    private showNames;
    private showLevels;
    private showData;
    private showAcknowledgements;
    private showEnrichments;
    private filterParameters;
    private customListenerCode;
    private location;
    private dashboard;
    private key;
    private dhInfo;
    private defaultContext;
    private className;
    private instanceId;
    private defaultEvent;
    private static _init;
    static initialize(): void;
    constructor();
    static createShowEventLogWithDataTable(title: string, parameters: DataTable): ShowEventLog;
    static createDefault(): ShowEventLog;
    static createShowEventLog(title: string, eventList: EntityList, showRealtime: boolean, showHistory: boolean, preloadHistory: boolean, showContexts: boolean, showNames: boolean, showLevels: boolean, showAcknowledgements: boolean, showEnrichments: boolean, customListenerCode: number, location: WindowLocation, dashboard: DashboardProperties): ShowEventLog;
    protected constructParameters(): DataTable;
    getEventFilter(): string | null;
    setEventFilter(eventFilter: string): void;
    getEvents(): EntityList;
    setEvents(eventList: EntityList): void;
    isShowRealtime(): boolean;
    setShowRealtime(showRealtime: boolean): void;
    isShowHistory(): boolean;
    setShowHistory(showHistory: boolean): void;
    isPreloadHistory(): boolean;
    setPreloadHistory(preloadHistory: boolean): void;
    isShowContexts(): boolean;
    setShowContexts(showContexts: boolean): void;
    isShowNames(): boolean;
    setShowNames(showNames: boolean): void;
    isShowLevels(): boolean;
    setShowLevels(showLevels: boolean): void;
    isShowData(): boolean;
    setShowData(showData: boolean): void;
    isShowAcknowledgements(): boolean;
    setShowAcknowledgements(showAcknowledgements: boolean): void;
    isShowEnrichments(): boolean;
    setShowEnrichments(showEnrichments: boolean): void;
    getFilterParameters(): DataTable | null;
    setFilterParameters(filterParameters: DataTable): void;
    getCustomListenerCode(): number | null;
    setCustomListenerCode(customListenerCode: number): void;
    getLocation(): WindowLocation | null;
    setLocation(location: WindowLocation): void;
    getDashboard(): DashboardProperties | null;
    setDashboard(dashboard: DashboardProperties): void;
    getDefaultContext(): string | null;
    setDefaultContext(defaultContext: string): void;
    getClassName(): string | null;
    setClassName(className: string): void;
    getInstanceId(): number | null;
    setInstanceId(instanceId: number): void;
    getDefaultEvent(): string | null;
    setDefaultEvent(event: string): void;
    getKey(): string | null;
    setKey(key: string): void;
    getDashboardsHierarchyInfo(): DashboardsHierarchyInfo | null;
    setDashboardsHierarchyInfo(dhInfo: DashboardsHierarchyInfo): void;
}
