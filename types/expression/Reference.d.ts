import JObject from '../util/java/JObject';
import Expression from './Expression';
export default class Reference extends JObject {
    static readonly SCHEMA_FORM: string;
    static readonly SCHEMA_TABLE: string;
    static readonly SCHEMA_STATISTICS: string;
    static readonly SCHEMA_ENVIRONMENT: string;
    static readonly SCHEMA_PARENT: string;
    static readonly SCHEMA_MENU: string;
    static readonly SCHEMA_ACTION: string;
    static readonly EVENT_SIGN: string;
    static readonly ACTION_SIGN: string;
    static readonly PARAMS_BEGIN: string;
    static readonly PARAMS_END: string;
    static readonly SCHEMA_END: string;
    static readonly SERVER_END: string;
    static readonly CONTEXT_END: string;
    static readonly FIELD_BEGIN: string;
    static readonly ROW_BEGIN: string;
    static readonly ROW_END: string;
    static readonly PROPERTY_BEGIN: string;
    static readonly APPEARANCE_LINK: number;
    static readonly APPEARANCE_BUTTON: number;
    private image;
    private schema;
    private server;
    private context;
    private entity;
    private entityType;
    private parameters;
    private field;
    private row;
    private property;
    private appearance;
    constructor(source?: string, server?: string | null, context?: string | null, entity?: string | null, entityType?: number | null, field?: string | null, ...parameters: any[]);
    protected parse(source: string): void;
    getServer(): string | null;
    getContext(): string | null;
    getEntity(): string | null;
    getEntityType(): number | null;
    getField(): string | null;
    getParameters(): Array<any>;
    getRow(): number | null;
    getSchema(): string | null;
    getProperty(): string | null;
    getImage(): string;
    private createImage;
    toString(): string;
    setContext(context: string): void;
    setEntity(entity: string): void;
    setEntityType(entityType: number): void;
    addParameter(parameter: string | Expression): void;
    setField(field: string): void;
    setProperty(property: string): void;
    setSchema(schema: string): void;
    setRow(row: number): void;
    setServer(server: string): void;
    clone(): Reference;
    equals(obj: JObject | null): boolean;
}
