import Expression from '../expression/Expression';
import TableFormat from '../datatable/TableFormat';
import EventEnrichmentRule from './EventEnrichmentRule';
import JObject from '../util/java/JObject';
export default class EventProcessingRule extends JObject {
    static __static_initialized: boolean;
    static FIELD_MASK: string;
    static FIELD_EVENT: string;
    static FIELD_PREFILTER: string;
    static FIELD_DEDUPLICATOR: string;
    static FIELD_QUEUE: string;
    static FIELD_DUPLICATE_DISPATCHING: string;
    static FIELD_PERIOD: string;
    static FIELD_ENRICHMENTS: string;
    static FORMAT: TableFormat;
    static __static_initializer(): void;
    private mask;
    private event;
    private prefilter;
    private deduplicator;
    private queue;
    private duplicateDispatching;
    private period;
    private enrichments;
    private prefilterExpression;
    private deduplicatorExpression;
    private filtered;
    private saved;
    private duplicates;
    constructor(mask: string, event: string);
    getEvent(): string;
    getMask(): string;
    getPeriod(): number;
    setEvent(event: string): void;
    setMask(mask: string): void;
    setPeriod(period: number): void;
    getPrefilter(): string;
    setPrefilter(prefilter: string): void;
    getPrefilterExpression(): Expression | null;
    getDeduplicator(): string;
    setDeduplicator(deduplicator: string): void;
    getDeduplicatorExpression(): Expression | null;
    getEnrichments(): Array<EventEnrichmentRule>;
    setEnrichments(enrichments: Array<EventEnrichmentRule>): void;
    getQueue(): number;
    setQueue(queue: number): void;
    isDuplicateDispatching(): boolean;
    setDuplicateDispatching(duplicateDispatching: boolean): void;
    addFiltered(): void;
    addSaved(): void;
    addDuplicate(): void;
    getFiltered(): number;
    getSaved(): number;
    getDuplicates(): number;
    toString(): string;
    equals(obj: JObject | null): boolean;
}
